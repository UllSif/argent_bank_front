swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Transactions Module
      summary: Retrieve transactions
      description: API endpoint for retrieving all transactions for the current month, grouped by account
      security:
        - Bearer: []
      parameters:
        - in: header
          name: Authorization
          type: string
          description: JWT token for authentication
          required: true
        - in: query
          name: accountId
          type: string
          required: false
          description: Account ID to filter transactions by account
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Invalid request parameters
        "500":
          description: Internal Server Error

    post:
      tags:
        - Transactions Module
      summary: Add a new transaction
      description: API endpoint for creating a new transaction
      security:
        - Bearer: []
      parameters:
        - in: header
          name: Authorization
          type: string
          description: JWT token for authentication
          required: true
        - in: body
          name: body
          schema:
            $ref: "#/definitions/TransactionUpdate"
          required: true
      responses:
        200:
          description: Transaction successfully created
        400:
          description: Invalid request (incorrect transaction data)

  /transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Retrieve one transaction
      description: API endpoint for retrieving details of a specific transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to retrieve details for
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

    put:
      tags:
        - Transactions Module
      summary: Update Transaction
      description: API endpoint for updating information on a specific transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error


securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      type:
        type: string
      amount:
        type: number
      date:
        type: string
      description:
        type: string
  TransactionDetails:
    allOf:
      - $ref: '#/definitions/Transaction'
      - properties:
          category:
            type: string
          status:
            type: string
  TransactionUpdate:
    type: object
    properties:
      type:
        type: string
      amount:
        type: number
      description:
        type: string
      category:
        type: string
      status:
        type: string